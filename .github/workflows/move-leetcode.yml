name: Move LeetCode Solutions

on:
  workflow_dispatch: # 수동 실행 옵션 유지
  push:
    paths:
      - "[0-9][0-9][0-9][0-9]-*/**" # LeetHub가 생성하는 폴더 패턴 (예: 0020-valid-parentheses)

jobs:
  move-files:
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          
      - name: Configure Git for case sensitivity
        run: git config --global core.ignorecase false

      - name: Move LeetCode solutions
        run: |
          # 디버깅을 위한 현재 디렉토리 내용 출력
          echo "Current directory contents:"
          ls -la

          # LeetCode 폴더가 없다면 생성
          mkdir -p LeetCode

          # 변경된 파일 목록 확인
          echo "Changed files in this push:"
          git diff --name-only HEAD^ HEAD

          # LeetHub가 생성한 폴더들을 LeetCode 폴더로 이동
          found=0
          for d in [0-9][0-9][0-9][0-9]-*; do
            if [ -d "$d" ]; then
              echo "Moving directory: $d"
              git mv "$d" "LeetCode/" && found=1
            fi
          done

          # 이동할 폴더를 찾지 못했을 경우에도 오류로 처리하지 않음
          if [ $found -eq 0 ]; then
            echo "No matching directories found to move"
          fi

      - name: Commit, Pull with Rebase, and Push with Retry
        run: |
          # 변경사항이 없으면 스텝을 성공으로 종료
          if ! git status --porcelain | grep .; then
            echo "No changes to commit. Workflow finished successfully."
            exit 0
          fi

          # Git 사용자 설정
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          
          # 1. 로컬에 먼저 변경사항을 커밋
          #    add 명령은 git mv가 이미 처리했으므로 사실상 필요 없지만, 안전을 위해 유지
          git add -A
          git commit -m "chore: Auto-move LeetCode solution"

          # 2. 푸시 재시도 로직 (최대 5번 시도)
          retry_count=0
          max_retries=5
          until git push
          do
            retry_count=$((retry_count+1))
            if [ $retry_count -ge $max_retries ]; then
              echo "::error::Push failed after $max_retries retries."
              exit 1
            fi
            
            echo "Push failed due to remote changes. Retrying in 5 seconds... (Attempt ${retry_count})"
            sleep 5
            
            # 3. 실패 시, 원격의 최신 상태를 가져와 rebase로 재정렬
            git pull --rebase
          done
          
          echo "Push successful!"
